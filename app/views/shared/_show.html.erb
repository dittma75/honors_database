<h1>Information for this <%= @object.class.model_name.human.titleize %></h1>
<% @object.attributes.each do |attribute| %>
  <% attr_name = attribute.first.to_s.split('_').map(&:titleize).join(' ') %>
  <% unless (attribute.first.to_s.eql?('id')) %>
    <% if (attribute.first.to_s[-3..-1].eql?('_id')) #It's a foreign key %>
      <%  class_name = attribute.first.to_s.gsub(/_id/i, "").pluralize.classify %>
      <div>
        <%=
          #attr_name separates the words with spaces.
          "#{attr_name.gsub(/ id/i, "")}:
          #{class_name.constantize.find(attribute.last.to_i).name}" 
        %>
      </div>
    <% else %>
      <div><%= "#{attr_name}:  #{attribute.last}" %></div>
    <% end %>
  <% end %>
<% end %>
<% mtm_associations =
    @object.class.reflect_on_all_associations(:has_and_belongs_to_many) %>
<% mtm_associations.each do |assoc_type| %>
  <h1><%= assoc_type.name.to_s.titleize %></h1>
  <% @object.send(assoc_type.plural_name).sort_by{|a| a.name}.each do |assoc_value| %>
    <%= assoc_value.name %><br/>
  <% end %>
<% end %>
<% otm_associations = @object.class.reflect_on_all_associations(:has_many) %>
<% otm_associations.each do |assoc_type| %>
  <h1><%= assoc_type.name.to_s.titleize %></h1>
  <% @object.send(assoc_type.plural_name).sort_by{|a| a.name}.each do |assoc_value| %>
    <%= assoc_value.name %><br/>
  <% end %>
<% end %>
<br/>
<%= link_to 'Edit', action: 'edit', id: @object.id %> |
<%= link_to 'Back', action: nil %>
