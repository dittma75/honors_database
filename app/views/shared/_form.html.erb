<%= form_for(@object) do |f| %>
  <% @object.attributes.each do |attribute| %>
    <% attr_name = attribute.first.to_s.split('_').map(&:capitalize).join(' ') %>
    <% unless (attribute.first.eql?('id') or
               attribute.first.eql?('created_at') or
               attribute.first.eql?('updated_at')) %>
      <div class="field">
        <% if (attribute.first.start_with?('is_')) %>
          <%= f.check_box attribute.first.to_sym%><%= attr_name %><br/>
        <% else %>
          <%= f.label attribute.first.to_sym, attr_name %>
          <%= f.text_field attribute.first.to_sym, {value: attribute.last}%>
        <% end %>
      </div>
    <% end %>
  <% end %>
  <% mtm_associations = #@object.class.reflect_on_all_associations(:has_many) +
    @object.class.reflect_on_all_associations(:has_and_belongs_to_many) %>
  <% otm_associations = @object.class.reflect_on_all_associations(:has_many) %>
  <%= otm_associations %>
  <%= mtm_associations %>
  <h1>Add One-to-Many Associations</h1>
  <% otm_associations.each do |assoc| %>
    <%= assoc.name %>
    <% param_id = "#{assoc.plural_name}_id" %>
    <%= collection_select(
      nil,
      param_id.to_sym,
      assoc.class_name.constantize.all.sort_by{|obj| obj.name},
      :id,
      :name,
      {:include_blank => true}
    ) %><br/>
  <% end %>
  <h1>Add Many-to-Many Associations</h1>
  <% mtm_associations.each do |assoc| %>
    <%= assoc.name %>
    <%= collection_select(
      nil,
      assoc.association_foreign_key.to_sym,
      assoc.class_name.constantize.all.sort_by{|obj| obj.name},
      :id,
      :name,
      {:include_blank => true}
    ) %><br/>
  <% end %>
  <div class="actions">
    <%= f.submit :class => 'submit'%>
  </div>
<% end %>
<%= link_to 'Back', action: nil %>